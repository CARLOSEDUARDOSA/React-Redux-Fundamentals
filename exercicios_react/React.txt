É bem dificil fazer um projeto apenas com o react, assim precisamos do redux, redux-form...

gerar bundle --> ./node_modules/.bin/webpack

--> framework baseado em componentes
--> apenas view

React-DOM 
    --> apenas quando for colocar componentes no html

Componente de Classe
    --> Para componentes mais complexos, com mais metodos

As propriedades (props)
    --> são somente leitura, sempre
    --> constructor(props){
        super(props) //necessario
        this.state = { value: props.initialValue} //inicia o estado
    }
    --> o dado não é alterado, apenas evoluido, o estado vai sendo evoluido, alterando oestado

this
    --> ele altera o contexto dependendo de quem chama

controlled component (recomendado pelo React)
    --> estado na DOM vs estado no js - angular um altualiza o outro (mão dupla)
    --> react o js domina a parada, nunca é gerado da DOM para o componente
        sempre do codigo js para a DOM (mão única)

    --> na DOM é gerado um evento -> chama o metodo que altera o estado do componente -> apos alterado o estado -> o render atualiza na DOM

uncontrolled component
    -->         this.state = { value: undefined} -- torna não controlado pelo js