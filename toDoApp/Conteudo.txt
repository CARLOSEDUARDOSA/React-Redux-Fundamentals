--------------------------- Configuração e instalação
Moongo --> inicializado
backend --> pm2 (ferramenta de produção)

Todas dependencia de dev, depois que criar o app.js não é necessario utilizar

npm i --save-dev 
//Parse do form e json 
body-parser@1.15.2
//Framework backend
express@4.14.0
// conexão com o bd, mapear objto-doc
mongoose@4.7.0
//lib facilitar web services (simples)
node-restful@0.2.5
//prod -- launcher app -- start e monitora o app, não deixar parara a aplicação
pm2@2.1.5
//dev -- laucher tbm
nodemon@1.11.0

npm i --save-dev body-parser@1.15.2 express@4.14.0 mongoose@4.7.0 node-restful@0.2.5 pm2@2.1.5 nodemon@1.11.0

scripts:
        "dev": "nodemon",
        "production": "pm2 start src/loader.js --name todo-app"

-------------------------- Servidor com express
--> middleware chain
    --> funcoes que trabalham com requisiçoes
    --> aplicada a todas as req. que chegam no Servidor

        server.use(bodyParser.urlencoded({ extended: true }))

--------------------------Conexão com bd
    mongoose
    --> crud
    --> abrir conexao etc.
    --> start no mongo para funcionar o loader

    Mongo deve estar na pasta data/db  --> ter permissão de escrita

-------------------------  ODM e Criação da API REST

node restfull cria uma api restful quase pronta  -- rapido
--quando da um update ele retorna o antigo, para retornar o novo 
        model.updateOption({new:true})

-- node-restfull tem propriedades nas consultas get